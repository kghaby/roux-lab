{"version":3,"file":"component---src-pages-using-ssr-js-ebdb207ce1756d678526.js","mappings":"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","sources":["webpack://roux-lab/./src/components/nav.js","webpack://roux-lab/./src/components/header.js","webpack://roux-lab/./src/components/layout.js","webpack://roux-lab/./src/components/seo.js","webpack://roux-lab/./src/pages/using-ssr.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./nav.css\";\n\nconst Nav = forwardRef(({ className }, ref) => (\n  <nav className={className} ref={ref}>\n    <ul className=\"nav-list\">\n      <li><Link to=\"/\">Home</Link></li>\n      <li><Link to=\"/members\">Members</Link></li>\n      <li><Link to=\"/research\">Research</Link></li>\n      <li><Link to=\"/methods\">Methods</Link></li>\n      <li><Link to=\"/publications\">Publications</Link></li>\n      <li><Link to=\"/openings\">Openings</Link></li>\n      <li><Link to=\"/gallery\">Gallery</Link></li>\n      <li><Link to=\"/tools\">Tools</Link></li>\n      <li><Link to=\"/useful-links\">Useful Links</Link></li>\n      <li><Link to=\"/contacts\">Contacts</Link></li>\n    </ul>\n  </nav>\n));\n\nexport default Nav;\n\n\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport Nav from \"./nav.js\";\nimport \"./header.css\";\n\nconst Header = ({ siteTitle }) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [hasSmallWidth, setSmallWidth] = useState(false);\n  const headerRef = useRef(null);\n  const location = useLocation();\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\" || event.key === \" \") {\n      setMenuOpen(!menuOpen);\n    }\n  };\n\n  const handleScroll = () => {\n    if (window.scrollY > 50) {\n      headerRef.current.classList.add(\"scrolled\");\n    } else {\n      headerRef.current.classList.remove(\"scrolled\");\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const maxNavHeaderWidth = parseFloat(getComputedStyle(document.documentElement).getPropertyValue('--max-navheader-width'));\n      setSmallWidth(window.innerWidth <= (maxNavHeaderWidth * parseFloat(getComputedStyle(document.documentElement).fontSize)));\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize(); // Set initial state\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const isHomePage = location.pathname === \"/\";\n\n  return (\n    <>\n      <header className={`header ${isHomePage ? \"animate-header\" : \"\"}`} ref={headerRef}>\n        <div className=\"container\">\n          <div className=\"logo\">\n            <Link to=\"/\" className={`site-title`}>\n              {siteTitle}\n            </Link>\n          </div>\n          {hasSmallWidth ? (\n            <div\n              className=\"menu-toggle\"\n              onClick={() => setMenuOpen(!menuOpen)}\n              onKeyDown={handleKeyDown}\n              role=\"button\"\n              tabIndex={0}\n              aria-label=\"Toggle menu\"\n              aria-expanded={menuOpen}\n            >\n              {menuOpen ? '>' : '<'}\n            </div>\n          ) : (\n            <Nav className={`nav-header`} />\n          )}\n        </div>\n      </header>\n      {hasSmallWidth && <Nav className={`nav-side ${menuOpen ? 'open' : ''}`} />}\n    </>\n  );\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport React, { useEffect } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Header from \"./header\";\nimport \"./layout.css\"; // Import the global styles\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('show');\n        } else {\n          entry.target.classList.remove('show');\n        }\n      });\n    });\n  \n    const hiddenElements = document.querySelectorAll('.hidden');\n    hiddenElements.forEach(element => observer.observe(element));\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  return (\n    <div className=\"site-wrapper\">\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <main className=\"main-content\">{children}</main>\n      <footer className=\"footer\">\n        <p>&copy; {new Date().getFullYear()} Roux Lab | University of Chicago</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["forwardRef","_ref","ref","className","React","Link","to","siteTitle","menuOpen","setMenuOpen","useState","hasSmallWidth","setSmallWidth","headerRef","useRef","location","useLocation","handleScroll","window","scrollY","current","classList","add","remove","useEffect","addEventListener","removeEventListener","handleResize","maxNavHeaderWidth","parseFloat","getComputedStyle","document","documentElement","getPropertyValue","innerWidth","fontSize","isHomePage","pathname","onClick","onKeyDown","event","key","role","tabIndex","Nav","_data$site$siteMetada","children","data","useStaticQuery","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","querySelectorAll","element","observe","disconnect","Header","site","siteMetadata","title","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","Head","Seo","serverData","Layout","style","width","borderRadius","alt","src","message","href"],"sourceRoot":""}