{"version":3,"file":"component---src-pages-using-typescript-tsx-62de3913db703d16f327.js","mappings":"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","sources":["webpack://roux-lab/./src/pages/using-typescript.tsx","webpack://roux-lab/./src/components/nav.js","webpack://roux-lab/./src/components/header.js","webpack://roux-lab/./src/components/layout.js","webpack://roux-lab/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React, { forwardRef } from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./nav.css\";\n\nconst Nav = forwardRef(({ className }, ref) => (\n  <nav className={className} ref={ref}>\n    <ul className=\"nav-list\">\n      <li><Link to=\"/\">Home</Link></li>\n      <li><Link to=\"/members\">Members</Link></li>\n      <li><Link to=\"/research\">Research</Link></li>\n      <li><Link to=\"/methods\">Methods</Link></li>\n      <li><Link to=\"/publications\">Publications</Link></li>\n      <li><Link to=\"/openings\">Openings</Link></li>\n      <li><Link to=\"/gallery\">Gallery</Link></li>\n      <li><Link to=\"/tools\">Tools</Link></li>\n      <li><Link to=\"/useful-links\">Useful Links</Link></li>\n      <li><Link to=\"/contacts\">Contacts</Link></li>\n    </ul>\n  </nav>\n));\n\nexport default Nav;\n\n\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"gatsby\";\nimport Nav from \"./nav.js\";\nimport \"./header.css\";\n\nconst Header = ({ siteTitle }) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [hasSmallWidth, setSmallWidth] = useState(false);\n  const headerRef = useRef(null);\n  const navHeaderRef = useRef(null);\n  const navSideRef = useRef(null);\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\" || event.key === \" \") {\n      setMenuOpen(!menuOpen);\n    }\n  };\n\n  useEffect(() => {\n    if (menuOpen && hasSmallWidth) {\n      document.body.classList.add(\"menu-open\");\n      navSideRef.current.querySelectorAll('a').forEach((item) => item.setAttribute('tabindex', '0'));\n    } else {\n      document.body.classList.remove(\"menu-open\");\n      if (navSideRef.current) {\n        navSideRef.current.querySelectorAll('a').forEach((item) => item.setAttribute('tabindex', '-1'));\n      }\n    }\n  }, [menuOpen, hasSmallWidth]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const maxNavHeaderWidth = parseFloat(getComputedStyle(document.documentElement).getPropertyValue('--max-navheader-width'));\n      setSmallWidth(window.innerWidth <= (maxNavHeaderWidth * parseFloat(getComputedStyle(document.documentElement).fontSize)));\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize(); // Set initial state\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return (\n    <>\n      <header className=\"header\" ref={headerRef}>\n        <div className=\"container\">\n          <div className=\"logo\">\n            <Link to=\"/\" className=\"site-title\">\n              {siteTitle}\n            </Link>\n          </div>\n          {hasSmallWidth ? (\n            <div\n              className=\"menu-toggle\"\n              onClick={() => setMenuOpen(!menuOpen)}\n              onKeyDown={handleKeyDown}\n              role=\"button\"\n              tabIndex={0}\n              aria-label=\"Toggle menu\"\n              aria-expanded={menuOpen}\n            >\n              {menuOpen ? '>' : '<'}\n            </div>\n          ) : (\n            <Nav className=\"nav-header\" ref={navHeaderRef} />\n          )}\n        </div>\n      </header>\n      {hasSmallWidth && <Nav className={`nav-side ${menuOpen ? 'open' : ''}`} ref={navSideRef} />}\n    </>\n  );\n};\n\nexport default Header;\n\n\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport \"./layout.css\";\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className=\"site-wrapper\">\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <main className=\"main-content\">{children}</main>\n      <footer className=\"footer\">\n        <p>&copy; {new Date().getFullYear()} Roux Lab | University of Chicago</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","forwardRef","ref","className","siteTitle","menuOpen","setMenuOpen","useState","hasSmallWidth","setSmallWidth","headerRef","useRef","navHeaderRef","navSideRef","useEffect","document","body","classList","add","current","querySelectorAll","forEach","item","setAttribute","remove","handleResize","maxNavHeaderWidth","parseFloat","getComputedStyle","documentElement","getPropertyValue","window","innerWidth","fontSize","addEventListener","removeEventListener","onClick","onKeyDown","event","key","role","tabIndex","Nav","_data$site$siteMetada","children","useStaticQuery","Header","siteMetadata","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}