{"version":3,"file":"component---src-pages-using-ssr-js-0d68f5fb50566c3d0251.js","mappings":"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","sources":["webpack://roux-lab/./gatsby-config.js","webpack://roux-lab/./src/path-prefix.js","webpack://roux-lab/./src/components/nav.js","webpack://roux-lab/./src/components/header.js","webpack://roux-lab/./src/components/layout.js","webpack://roux-lab/./src/components/seo.js","webpack://roux-lab/./src/pages/using-ssr.js"],"sourcesContent":["/**\n * Configure your Gatsby site with this file.\n *\n * See: https://www.gatsbyjs.com/docs/reference/config-files/gatsby-config/\n */\n\n/**\n * @type {import('gatsby').GatsbyConfig}\n */\nmodule.exports = {\n  siteMetadata: {\n    title: `Roux Lab`,\n    description: `BenoÃ®t Roux's research group at the University of Chicago.`,\n    author: `@kghaby`,\n    siteUrl: `https://kghaby.github.io/roux-lab/`,\n  },\n  plugins: [\n    `gatsby-plugin-image`,\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `images`,\n        path: `${__dirname}/src/images`,\n      },\n    },\n    `gatsby-transformer-sharp`,\n    `gatsby-plugin-sharp`,\n    `gatsby-plugin-typescript`,\n    {\n      resolve: `gatsby-plugin-manifest`,\n      options: {\n        name: `Roux Lab`,\n        short_name: `RL`,\n        start_url: `/`,\n        background_color: `#8b7e7e`,\n        // This will impact how browsers show your PWA/website\n        // https://css-tricks.com/meta-theme-color-and-trickery/\n        theme_color: `#760000`,\n        display: `minimal-ui`,\n        icon: `src/images/protR_whitecircle.png`, // This path is relative to the root of the site.\n      },\n    },\n  ],\n  pathPrefix: \"/roux-lab\",\n}\n","import config from \"../gatsby-config\";\n\nexport const pathPrefix = config.pathPrefix || \"\";\n","import React, { forwardRef } from \"react\";\nimport { Link } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport { pathPrefix } from \"../path-prefix\";\nimport \"./nav.css\";\n\nconst Nav = forwardRef(({ className }, ref) => {\n  const location = useLocation();\n\n  // Remove pathPrefix from pathname so that github and local paths match\n  const pathWithoutPrefix = location.pathname.replace(new RegExp(`^${pathPrefix}`), '');\n\n  const isActive = (linkPath) => {\n    return pathWithoutPrefix.startsWith(linkPath);\n  };\n\n  return (\n    <nav className={className} ref={ref}>\n      <ul className=\"nav-list\">\n        <li className={pathWithoutPrefix === \"/\" ? \"active-link\" : \"\"}>\n          <Link to=\"/\"><span className=\"text-content\">Home</span></Link>\n        </li>\n        <li className={isActive(\"/members/\") ? \"active-link\" : \"\"}>\n          <Link to=\"/members\"><span className=\"text-content\">Members</span></Link>\n        </li>\n        <li className={isActive(\"/research/\") ? \"active-link\" : \"\"}>\n          <Link to=\"/research\"><span className=\"text-content\">Research</span></Link>\n        </li>\n        <li className={isActive(\"/methods/\") ? \"active-link\" : \"\"}>\n          <Link to=\"/methods\"><span className=\"text-content\">Methods</span></Link>\n        </li>\n        <li className={isActive(\"/publications/\") ? \"active-link\" : \"\"}>\n          <Link to=\"/publications\"><span className=\"text-content\">Publications</span></Link>\n        </li>\n        <li className={isActive(\"/openings/\") ? \"active-link\" : \"\"}>\n          <Link to=\"/openings\"><span className=\"text-content\">Openings</span></Link>\n        </li>\n        <li className={isActive(\"/gallery/\") ? \"active-link\" : \"\"}>\n          <Link to=\"/gallery\"><span className=\"text-content\">Gallery</span></Link>\n        </li>\n        <li className={isActive(\"/tools/\") ? \"active-link\" : \"\"}>\n          <Link to=\"/tools\"><span className=\"text-content\">Tools</span></Link>\n        </li>\n        <li className={isActive(\"/useful-links/\") ? \"active-link\" : \"\"}>\n          <Link to=\"/useful-links\"><span className=\"text-content\">Useful Links</span></Link>\n        </li>\n        <li className={isActive(\"/contacts/\") ? \"active-link\" : \"\"}>\n          <Link to=\"/contacts\"><span className=\"text-content\">Contacts</span></Link>\n        </li>\n      </ul>\n    </nav>\n  );\n});\n\nexport default Nav;\n\n\n\n\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"gatsby\";\nimport Nav from \"./nav.js\";\nimport \"./header.css\";\n\n//TODO: selection and current page like windows taskbar\n\nconst Header = ({ siteTitle }) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [hasSmallWidth, setSmallWidth] = useState(false);\n  const headerRef = useRef(null);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const maxNavHeaderWidth = parseFloat(getComputedStyle(document.documentElement).getPropertyValue('--max-navheader-width'));\n      setSmallWidth(window.innerWidth <= (maxNavHeaderWidth * parseFloat(getComputedStyle(document.documentElement).fontSize)));\n    };\n\n    handleResize(); // Set initial state\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\" || event.key === \" \") {\n      setMenuOpen(!menuOpen);\n    }\n  };\n\n  const handleScroll = () => {\n    if (window.scrollY > 50) {\n      headerRef.current?.classList.add(\"scrolled\");\n    } else {\n      headerRef.current?.classList.remove(\"scrolled\");\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return (\n    <>\n      <header className={`header`} ref={headerRef}>\n        <div className=\"container\">\n          <div className=\"logo\">\n            <Link to=\"/\" className={`site-title`}>\n              {siteTitle}\n            </Link>\n          </div>\n          {hasSmallWidth ? (\n            <div\n              className=\"menu-toggle\"\n              onClick={() => setMenuOpen(!menuOpen)}\n              onKeyDown={handleKeyDown}\n              role=\"button\"\n              tabIndex={0}\n              aria-label=\"Toggle menu\"\n              aria-expanded={menuOpen}\n              // style={{ transform: menuOpen ? \"rotate(-180deg)\" : \"rotate(0)\" }}\n              // >\n              //   {'<'}\n            >\n              {menuOpen ? '>' : '<'}\n            </div>\n          ) : (\n            <Nav className={`nav-header`} />\n          )}\n        </div>\n      </header>\n      {hasSmallWidth && <Nav className={`nav-side ${menuOpen ? 'open' : ''}`} />}\n    </>\n  );\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport React, { useEffect } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Header from \"./header\";\nimport \"./layout.css\"; // Import the global styles\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('show');\n        } else {\n          entry.target.classList.remove('show');\n        }\n      });\n    });\n  \n    const hiddenElements = document.querySelectorAll('.hidden');\n    hiddenElements.forEach(element => observer.observe(element));\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  return (\n    <div className=\"siteWrapper\">\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <main className=\"mainContent\">{children}</main>\n      <footer className=\"footer\">\n        <p>&copy; {new Date().getFullYear()} Roux Lab | University of Chicago</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["module","exports","siteMetadata","title","description","author","siteUrl","plugins","resolve","options","name","path","short_name","start_url","background_color","theme_color","display","icon","pathPrefix","config","forwardRef","_ref","ref","className","pathWithoutPrefix","useLocation","pathname","replace","RegExp","isActive","linkPath","startsWith","React","Link","to","siteTitle","menuOpen","setMenuOpen","useState","hasSmallWidth","setSmallWidth","headerRef","useRef","useEffect","handleResize","maxNavHeaderWidth","parseFloat","getComputedStyle","document","documentElement","getPropertyValue","window","innerWidth","fontSize","addEventListener","removeEventListener","handleScroll","_headerRef$current","_headerRef$current2","scrollY","current","classList","add","remove","onClick","onKeyDown","event","key","role","tabIndex","Nav","_data$site$siteMetada","children","data","useStaticQuery","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","querySelectorAll","element","observe","disconnect","Header","site","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","metaDescription","defaultTitle","content","property","Head","Seo","serverData","Layout","style","width","borderRadius","alt","src","message","href"],"sourceRoot":""}