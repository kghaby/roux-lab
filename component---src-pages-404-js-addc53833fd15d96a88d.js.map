{"version":3,"file":"component---src-pages-404-js-addc53833fd15d96a88d.js","mappings":"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","sources":["webpack://roux-lab/./src/components/nav.js","webpack://roux-lab/./src/components/header.js","webpack://roux-lab/./src/components/layout.js","webpack://roux-lab/./src/components/seo.js","webpack://roux-lab/./src/pages/404.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport { Link } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport \"./nav.css\";\n\nconst Nav = forwardRef(({ className }, ref) => {\n  const location = useLocation();\n\n  return (\n    <nav className={className} ref={ref}>\n      <ul className=\"nav-list\">\n        <li className={location.pathname === \"/\" ? \"active-link\" : \"\"}>\n          <Link to=\"/\"><span className=\"text-content\">Home</span></Link>\n        </li>\n        <li className={location.pathname === \"/members/\" ? \"active-link\" : \"\"}>\n          <Link to=\"/members\"><span className=\"text-content\">Members</span></Link>\n        </li>\n        <li className={location.pathname === \"/research/\" ? \"active-link\" : \"\"}>\n          <Link to=\"/research\"><span className=\"text-content\">Research</span></Link>\n        </li>\n        <li className={location.pathname === \"/methods/\" ? \"active-link\" : \"\"}>\n          <Link to=\"/methods\"><span className=\"text-content\">Methods</span></Link>\n        </li>\n        <li className={location.pathname === \"/publications/\" ? \"active-link\" : \"\"}>\n          <Link to=\"/publications\"><span className=\"text-content\">Publications</span></Link>\n        </li>\n        <li className={location.pathname === \"/openings/\" ? \"active-link\" : \"\"}>\n          <Link to=\"/openings\"><span className=\"text-content\">Openings</span></Link>\n        </li>\n        <li className={location.pathname === \"/gallery/\" ? \"active-link\" : \"\"}>\n          <Link to=\"/gallery\"><span className=\"text-content\">Gallery</span></Link>\n        </li>\n        <li className={location.pathname === \"/tools/\" ? \"active-link\" : \"\"}>\n          <Link to=\"/tools\"><span className=\"text-content\">Tools</span></Link>\n        </li>\n        <li className={location.pathname === \"/useful-links/\" ? \"active-link\" : \"\"}>\n          <Link to=\"/useful-links\"><span className=\"text-content\">Useful Links</span></Link>\n        </li>\n        <li className={location.pathname === \"/contacts/\" ? \"active-link\" : \"\"}>\n          <Link to=\"/contacts\"><span className=\"text-content\">Contacts</span></Link>\n        </li>\n      </ul>\n    </nav>\n  );\n});\n\nexport default Nav;\n\n\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"gatsby\";\nimport Nav from \"./nav.js\";\nimport \"./header.css\";\n\n//TODO: selection and current page like windows taskbar\n\nconst Header = ({ siteTitle }) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [hasSmallWidth, setSmallWidth] = useState(false);\n  const headerRef = useRef(null);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const maxNavHeaderWidth = parseFloat(getComputedStyle(document.documentElement).getPropertyValue('--max-navheader-width'));\n      setSmallWidth(window.innerWidth <= (maxNavHeaderWidth * parseFloat(getComputedStyle(document.documentElement).fontSize)));\n    };\n\n    handleResize(); // Set initial state\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\" || event.key === \" \") {\n      setMenuOpen(!menuOpen);\n    }\n  };\n\n  const handleScroll = () => {\n    if (window.scrollY > 50) {\n      headerRef.current?.classList.add(\"scrolled\");\n    } else {\n      headerRef.current?.classList.remove(\"scrolled\");\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return (\n    <>\n      <header className={`header`} ref={headerRef}>\n        <div className=\"container\">\n          <div className=\"logo\">\n            <Link to=\"/\" className={`site-title`}>\n              {siteTitle}\n            </Link>\n          </div>\n          {hasSmallWidth ? (\n            <div\n              className=\"menu-toggle\"\n              onClick={() => setMenuOpen(!menuOpen)}\n              onKeyDown={handleKeyDown}\n              role=\"button\"\n              tabIndex={0}\n              aria-label=\"Toggle menu\"\n              aria-expanded={menuOpen}\n            >\n              {menuOpen ? '>' : '<'}\n            </div>\n          ) : (\n            <Nav className={`nav-header`} />\n          )}\n        </div>\n      </header>\n      {hasSmallWidth && <Nav className={`nav-side ${menuOpen ? 'open' : ''}`} />}\n    </>\n  );\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport React, { useEffect } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Header from \"./header\";\nimport \"./layout.css\"; // Import the global styles\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('show');\n        } else {\n          entry.target.classList.remove('show');\n        }\n      });\n    });\n  \n    const hiddenElements = document.querySelectorAll('.hidden');\n    hiddenElements.forEach(element => observer.observe(element));\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  return (\n    <div className=\"site-wrapper\">\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <main className=\"main-content\">{children}</main>\n      <footer className=\"footer\">\n        <p>&copy; {new Date().getFullYear()} Roux Lab | University of Chicago</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n"],"names":["forwardRef","_ref","ref","className","location","useLocation","React","pathname","Link","to","siteTitle","menuOpen","setMenuOpen","useState","hasSmallWidth","setSmallWidth","headerRef","useRef","useEffect","handleResize","maxNavHeaderWidth","parseFloat","getComputedStyle","document","documentElement","getPropertyValue","window","innerWidth","fontSize","addEventListener","removeEventListener","handleScroll","_headerRef$current","_headerRef$current2","scrollY","current","classList","add","remove","onClick","onKeyDown","event","key","role","tabIndex","Nav","_data$site$siteMetada","children","data","useStaticQuery","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","querySelectorAll","element","observe","disconnect","Header","site","siteMetadata","title","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","Head","Seo","NotFoundPage","Layout"],"sourceRoot":""}